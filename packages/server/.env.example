# Obsidian Sync Server - Environment Configuration
# Copy this file to .env and fill in your values

# ==========================================
# DRIVE SERVICE CONFIGURATION
# ==========================================

# Choose storage backend: "local" or "google"
# - local: Files stored in local filesystem (development/testing)
# - google: Files stored in Google Drive (recommended for production)
DRIVE_TYPE=local

# ==========================================
# LOCAL STORAGE (if DRIVE_TYPE=local)
# ==========================================

# Path where files will be stored locally
# Note: This is only used when DRIVE_TYPE=local
LOCAL_STORAGE_PATH=./local-storage

# ==========================================
# GOOGLE DRIVE OAUTH2 (if DRIVE_TYPE=google)
# ==========================================

# NOTE: As of the latest version, OAuth is handled CLIENT-SIDE in the Obsidian plugin.
# The server NO LONGER needs GOOGLE_CLIENT_ID or GOOGLE_CLIENT_SECRET.
#
# OAuth tokens are stored on the user's local machine (in Obsidian plugin settings)
# and sent to the server with each request via Authorization header.
#
# The server acts as a stateless proxy - it receives tokens from the plugin
# and uses them to interact with Google Drive, but never stores them.
#
# Setup Instructions for Users:
# 1. Install the Obsidian plugin
# 2. Get OAuth credentials from Google Cloud Console (see below)
# 3. Enter credentials in the Obsidian plugin settings (NOT in server .env)
# 4. Authenticate with Google Drive through the plugin
# 5. Tokens are stored locally on your machine
#
# How to get OAuth credentials (for plugin configuration):
# 1. Go to https://console.cloud.google.com
# 2. Create a new project or select existing one
# 3. Enable "Google Drive API" for your project
# 4. Go to "APIs & Services" → "Credentials"
# 5. Click "Create Credentials" → "OAuth 2.0 Client ID"
# 6. Choose "Desktop app" as application type (NOT web application)
# 7. Copy the generated Client ID and Client Secret
# 8. Enter them in Obsidian plugin settings

# LEGACY: These are no longer required on the server
# GOOGLE_CLIENT_ID=your_client_id_here.apps.googleusercontent.com
# GOOGLE_CLIENT_SECRET=your_client_secret_here

# ==========================================
# SERVER CONFIGURATION
# ==========================================

# Server port (default: 3000)
# PORT=3000

# Server host (default: 0.0.0.0 - accepts all connections)
# HOST=0.0.0.0

# ==========================================
# OPTIONAL SETTINGS
# ==========================================

# Enable debug logging (shows detailed request/response logs)
# DEBUG=true

# CORS configuration (comma-separated list of allowed origins)
# Default: allows all origins (*)
# For production, restrict to specific domains:
# CORS_ORIGINS=https://your-domain.com,app://obsidian.md

# ==========================================
# DEPLOYMENT NOTES
# ==========================================
#
# Local Development:
#   DRIVE_TYPE=local
#   (No OAuth needed, files stored locally for testing)
#
# Production with Google Drive:
#   DRIVE_TYPE=google
#   (No server-side OAuth credentials needed!)
#
#   Users configure OAuth in the Obsidian plugin:
#   - Each user gets their own Google OAuth credentials
#   - Tokens are stored on each user's machine
#   - Server receives tokens via Authorization headers
#   - Server never stores or persists any tokens
#
# Security Benefits:
#   ✓ Tokens stored on user's local machine, not on server
#   ✓ Server is stateless (no token storage/management)
#   ✓ Each user controls their own Google Drive access
#   ✓ Server admin never has access to user tokens
